# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: ghcr.io/nltimv/karma-chameleon
      GHCR_USERNAME: nltimv
    docker:
      - image: docker:20
    resource_class: small

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-docker-dev:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build -t build:latest .
      - run:
          name: Publish Docker Image to GitHub Container Registry
          command: |
            export REVISION=$(echo "<< pipeline.git.revision >>" | awk '{print substr($0,0,7)}')
            export VERSION="0.0.0.<< pipeline.number >>-dev-$REVISION"
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker tag build:latest $IMAGE_NAME:canary
            docker push $IMAGE_NAME:canary
            docker tag $IMAGE_NAME:canary $IMAGE_NAME:$VERSION
            docker push $IMAGE_NAME:$VERSION
  build-docker-release:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build -t build:latest .
      - run:
          name: Publish Docker Image to GitHub Container Registry
          command: |
            export NUMBER=$(echo "<< pipeline.git.tag >>" | sed 's/v//')
            export VERSION="$NUMBER.0.<< pipeline.number >>"
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker tag build:latest $IMAGE_NAME:latest
            docker push $IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$VERSION
            docker push $IMAGE_NAME:$VERSION

workflows:
  version: 2
  cicd:
    jobs:
      - build-docker-dev:
          filters:
            tags:
              ignore: /.*/
      - build-docker-release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+$/