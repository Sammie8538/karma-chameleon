# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: ghcr.io/nltimv/karma-chameleon
      GHCR_USERNAME: nltimv
    docker:
      - image: docker:20
    resource_class: small

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build -t build:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - run:
          name: Get version number
          command: git describe --tags | sed 's/v//' | tee version.txt
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
            - ./version.txt
  publish-dev:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Set image name and version number
          command: |
            export VERSION="$(cat version.txt).0.<< pipeline.number >>-dev"
      - run:
          name: Publish Docker Image to GitHub Container Registry
          command: |
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker tag $build:latest $IMAGE_NAME:$VERSION
            docker push $IMAGE_NAME:$VERSION
  publish-release:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Set version number
          command:
            export VERSION="$(cat version.txt).0.<< pipeline.number >>"
      - run:
          name: Publish Docker Image to GitHub Container Registry
          command: |
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker tag build:latest $IMAGE_NAME:latest
            docker push $IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$VERSION
            docker push $IMAGE_NAME:$VERSION

workflows:
  version: 2
  build:
    jobs:
      - build
      - publish-dev:
          requires:
            - build
          filters:
            tags:
              ignore: v[0-9]+[.][0-9]+/
      - publish-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+[.][0-9]+/